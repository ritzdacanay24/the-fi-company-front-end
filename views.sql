
DROP TABLE IF EXISTS `customerSatisfacation`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `customerSatisfacation` AS select 1 AS `id`,1 AS `property`,1 AS `service_type`,1 AS `customer1`,1 AS `fs_workOrder_id`,1 AS `jobNumber`,1 AS `dateSubmitted`,1 AS `rating`,1 AS `comments`,1 AS `vendorLeadTechName`;

DROP TABLE IF EXISTS `fs_billing_DELETE`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `fs_billing_DELETE` AS select sum((case when ((`a`.`isTravel` = 1) and (`a`.`totalHrs` > 8)) then 8 when ((`a`.`isTravel` = 1) and (`a`.`totalHrs` <= 8)) then `a`.`totalHrs` else 0 end)) AS `travelTimeHrs`,sum((case when ((`a`.`isTravel` = 1) and (`a`.`totalHrs` > 8)) then (`a`.`totalHrs` - 8) else 0 end)) AS `travel_over_time_hrs`,sum((case when (`a`.`isTravel` = 0) then `a`.`actualHrs` else 0 end)) AS `installTimes`,sum((case when ((`a`.`isTravel` = 0) and (`a`.`totalHrs` > 8)) then (`a`.`totalHrs` - 8) else 0 end)) AS `install_overtime_hrs`,(case when (sum(`a`.`totalHrs`) > 8) then ((sum(`a`.`totalHrs`) - 8) - ifnull(sum(`a`.`brkhrs`),0)) else 0 end) AS `total_overtime_from_total_hrs`,`a`.`workOrderId` AS `workOrderId`,`a`.`start` AS `start`,`a`.`startFormate` AS `startFormate`,ifnull(sum(`a`.`brkhrs`),0) AS `totalBrkHrs`,(ifnull(sum(`a`.`totalHrs`),0) - ifnull(sum(`a`.`brkhrs`),0)) AS `totalHrs` from (select `a`.`workOrderId` AS `workOrderId`,`a`.`start` AS `start`,`a`.`startFormate` AS `startFormate`,`a`.`end` AS `end`,`a`.`totalHrs` AS `totalHrs`,`a`.`isTravel` AS `isTravel`,`a`.`brkhrs` AS `brkhrs`,(case when (`a`.`totalHrs` > 8) then (`a`.`totalHrs` - 8) else 0 end) AS `overtime`,(case when (`a`.`totalHrs` <= 8) then `a`.`totalHrs` else (`a`.`totalHrs` - (case when (`a`.`totalHrs` > 8) then (`a`.`totalHrs` - 8) else 0 end)) end) AS `actualHrs` from (select `a`.`workOrderId` AS `workOrderId`,date_format(cast(`a`.`start` as date),'%m/%d/%Y') AS `start`,date_format(cast(`a`.`start` as date),'%a %m/%d/%Y') AS `startFormate`,date_format(cast(`a`.`end` as date),'%m/%d/%Y') AS `end`,truncate((sum(`a`.`totalHours`) / 60),2) AS `totalHrs`,(case when (`a`.`work_order_labor_type` = 1) then 1 else 0 end) AS `isTravel`,truncate((sum(`a`.`total_break`) / 60),2) AS `brkhrs` from (select `eyefidb`.`fs_workOrderProject`.`workOrderId` AS `workOrderId`,`eyefidb`.`fs_workOrderProject`.`projectStart` AS `start`,`eyefidb`.`fs_workOrderProject`.`projectFinish` AS `end`,timestampdiff(MINUTE,`eyefidb`.`fs_workOrderProject`.`projectStart`,`eyefidb`.`fs_workOrderProject`.`projectFinish`) AS `totalHours`,timestampdiff(MINUTE,`eyefidb`.`fs_workOrderProject`.`brStart`,`eyefidb`.`fs_workOrderProject`.`brEnd`) AS `total_break`,`eyefidb`.`fs_workOrderProject`.`proj_type` AS `proj_type`,`b`.`work_order_labor_type` AS `work_order_labor_type` from (`eyefidb`.`fs_workOrderProject` left join `eyefidb`.`fs_scheduler_settings` `b` on(((convert(`b`.`value` using utf8mb4) = `eyefidb`.`fs_workOrderProject`.`proj_type`) and (`b`.`type` = 'Work Order Project Type')))) order by `eyefidb`.`fs_workOrderProject`.`projectStart`) `a` group by `a`.`workOrderId`,date_format(cast(`a`.`start` as date),'%m/%d/%Y'),date_format(cast(`a`.`end` as date),'%m/%d/%Y'),date_format(cast(`a`.`start` as date),'%a %m/%d/%Y'),`a`.`work_order_labor_type` order by date_format(cast(`a`.`start` as date),'%m/%d/%Y'),date_format(cast(`a`.`end` as date),'%m/%d/%Y')) `a`) `a` where (`a`.`start` is not null) group by `a`.`workOrderId`,`a`.`start`,`a`.`startFormate`;

DROP TABLE IF EXISTS `fs_billing_expense_daily_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `fs_billing_expense_daily_view` AS select `fs_billing_expense_view`.`request_date` AS `year`,count(1) AS `jobs`,truncate(sum(`fs_billing_expense_view`.`total_cost`),2) AS `total_cost`,truncate(sum(`fs_billing_expense_view`.`billing`),2) AS `total_billing`,truncate(avg(`fs_billing_expense_view`.`billing`),2) AS `avg_billing`,truncate(avg(`fs_billing_expense_view`.`total_cost`),2) AS `avg_cost` from `eyefidb`.`fs_billing_expense_view` group by `fs_billing_expense_view`.`request_date`;

DROP TABLE IF EXISTS `fs_billing_expense_monthly_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_billing_expense_monthly_view` AS select monthname(`fs_billing_expense_view`.`request_date`) AS `month`,count(1) AS `jobs`,month(`fs_billing_expense_view`.`request_date`) AS `month_number`,year(`fs_billing_expense_view`.`request_date`) AS `year`,truncate(sum(`fs_billing_expense_view`.`total_cost`),2) AS `total_cost`,truncate(sum(`fs_billing_expense_view`.`billing`),2) AS `total_billing`,truncate(avg(`fs_billing_expense_view`.`billing`),2) AS `avg_job_billing`,truncate(avg(`fs_billing_expense_view`.`total_cost`),2) AS `avg_job_cost`,dayofmonth(last_day(`fs_billing_expense_view`.`request_date`)) AS `days`,truncate(sum(`fs_billing_expense_view`.`total_cost`),2) AS `avg_monthly_cost`,truncate(sum(`fs_billing_expense_view`.`billing`),2) AS `avg_monthly_billing` from `eyefidb`.`fs_billing_expense_view` group by monthname(`fs_billing_expense_view`.`request_date`),year(`fs_billing_expense_view`.`request_date`),month(`fs_billing_expense_view`.`request_date`),dayofmonth(last_day(`fs_billing_expense_view`.`request_date`)) order by year(`fs_billing_expense_view`.`request_date`) desc,month(`fs_billing_expense_view`.`request_date`);

DROP TABLE IF EXISTS `fs_billing_expense_summary_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `fs_billing_expense_summary_view` AS select count(1) AS `jobs`,truncate(sum(`fs_billing_expense_view`.`total_cost`),2) AS `total_cost`,truncate(sum(`fs_billing_expense_view`.`billing`),2) AS `total_billing`,truncate(avg(`fs_billing_expense_view`.`billing`),2) AS `avg_billing`,truncate(avg(`fs_billing_expense_view`.`total_cost`),2) AS `avg_cost` from `eyefidb`.`fs_billing_expense_view`;

DROP TABLE IF EXISTS `fs_billing_expense_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_billing_expense_view` AS select `a`.`name` AS `name`,`a`.`workOrderId` AS `workOrderId`,`a`.`total_cost` AS `total_cost`,`a`.`mark_up` AS `mark_up`,`a`.`mark_up_percent` AS `mark_up_percent`,(`a`.`mark_up` + `a`.`total_cost`) AS `billing`,`a`.`request_date` AS `request_date`,`a`.`fs_scheduler_id` AS `fs_scheduler_id` from (select `a`.`name` AS `name`,`a`.`workOrderId` AS `workOrderId`,sum(`a`.`cost`) AS `total_cost`,sum(((`a`.`cost` * `c`.`mark_up_percent`) / 100)) AS `mark_up`,`c`.`mark_up_percent` AS `mark_up_percent`,`c`.`request_date` AS `request_date`,`a`.`fs_scheduler_id` AS `fs_scheduler_id` from ((`eyefidb`.`fs_workOrderTrip` `a` left join `eyefidb`.`fs_workOrder` `b` on((`b`.`id` = `a`.`workOrderId`))) left join `eyefidb`.`fs_scheduler` `c` on((`c`.`id` = `a`.`fs_scheduler_id`))) group by `a`.`name`,`a`.`workOrderId`,`c`.`mark_up_percent`,`c`.`request_date`,`a`.`fs_scheduler_id`) `a`;

DROP TABLE IF EXISTS `fs_billing_expense_yearly_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `fs_billing_expense_yearly_view` AS select year(`fs_billing_expense_view`.`request_date`) AS `year`,count(1) AS `jobs`,truncate(sum(`fs_billing_expense_view`.`total_cost`),2) AS `total_cost`,truncate(sum(`fs_billing_expense_view`.`billing`),2) AS `total_billing`,truncate(avg(`fs_billing_expense_view`.`billing`),2) AS `avg_billing`,truncate(avg(`fs_billing_expense_view`.`total_cost`),2) AS `avg_cost`,dayofyear(last_day((`fs_billing_expense_view`.`request_date` + interval (12 - month(`fs_billing_expense_view`.`request_date`)) month))) AS `days`,truncate(sum((`fs_billing_expense_view`.`total_cost` / dayofyear(last_day((`fs_billing_expense_view`.`request_date` + interval (12 - month(`fs_billing_expense_view`.`request_date`)) month))))),2) AS `avg_yearly_cost`,truncate(sum((`fs_billing_expense_view`.`billing` / dayofyear(last_day((`fs_billing_expense_view`.`request_date` + interval (12 - month(`fs_billing_expense_view`.`request_date`)) month))))),2) AS `avg_yearly_billing` from `eyefidb`.`fs_billing_expense_view` group by year(`fs_billing_expense_view`.`request_date`),dayofyear(last_day((`fs_billing_expense_view`.`request_date` + interval (12 - month(`fs_billing_expense_view`.`request_date`)) month))) order by year(`fs_billing_expense_view`.`request_date`) desc;

DROP TABLE IF EXISTS `fs_billing_labor_overall_monthly_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_billing_labor_overall_monthly_view` AS select sum((`a`.`travel` + `a`.`install`)) AS `regular`,sum((`a`.`travel_overtime` + `a`.`install`)) AS `overtime`,monthname(`c`.`request_date`) AS `month`,month(`c`.`request_date`) AS `month_number`,year(`c`.`request_date`) AS `year` from ((`eyefidb`.`fs_billing_view` `a` join `eyefidb`.`fs_workOrder` `b` on((`b`.`id` = `a`.`workOrderId`))) join `eyefidb`.`fs_scheduler` `c` on((`c`.`id` = `b`.`fs_scheduler_id`))) group by monthname(`c`.`request_date`),month(`c`.`request_date`),year(`c`.`request_date`);

DROP TABLE IF EXISTS `fs_billing_labor_overtime_monthly_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_billing_labor_overtime_monthly_view` AS select sum(`a`.`cost_total`) AS `cost_total`,sum(`a`.`billing_total`) AS `billing_total`,avg(`a`.`cost_rate`) AS `avg_cost_rate`,monthname(`c`.`request_date`) AS `month`,month(`c`.`request_date`) AS `month_number`,sum(`a`.`total_hrs`) AS `total_hrs`,year(`c`.`request_date`) AS `year`,count(1) AS `jobs`,truncate(avg(`a`.`billing_total`),2) AS `avg_job_billing`,truncate(avg(`a`.`cost_total`),2) AS `avg_job_cost`,dayofmonth(last_day(`c`.`request_date`)) AS `days`,truncate(sum((`a`.`cost_total` / dayofmonth(last_day(`c`.`request_date`)))),2) AS `avg_monthly_cost`,truncate(sum((`a`.`billing_total` / dayofmonth(last_day(`c`.`request_date`)))),2) AS `avg_monthly_billing` from ((`eyefidb`.`fs_billing_labor_view` `a` join `eyefidb`.`fs_workOrder` `b` on((`b`.`id` = `a`.`workOrderId`))) join `eyefidb`.`fs_scheduler` `c` on((`c`.`id` = `b`.`fs_scheduler_id`))) where (`a`.`typeOf` = 'Overtime') group by monthname(`c`.`request_date`),year(`c`.`request_date`),month(`c`.`request_date`),dayofmonth(last_day(`c`.`request_date`)) order by year(`c`.`request_date`) desc,month(`c`.`request_date`);

DROP TABLE IF EXISTS `fs_billing_labor_regular_monthly_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_billing_labor_regular_monthly_view` AS select sum(`a`.`total_hrs`) AS `total_hrs`,avg(`a`.`total_hrs`) AS `avg_hrs`,sum(`a`.`billing_total`) AS `billing_total`,sum(`a`.`cost_total`) AS `cost_total`,avg(`a`.`cost_rate`) AS `avg_cost_rate`,monthname(`c`.`request_date`) AS `month`,month(`c`.`request_date`) AS `month_number`,year(`c`.`request_date`) AS `year`,count(1) AS `jobs`,truncate(avg(`a`.`billing_total`),2) AS `avg_job_billing`,truncate(avg(`a`.`cost_total`),2) AS `avg_job_cost`,dayofmonth(last_day(`c`.`request_date`)) AS `days`,truncate(sum((`a`.`cost_total` / dayofmonth(last_day(`c`.`request_date`)))),2) AS `avg_monthly_cost`,truncate(sum((`a`.`billing_total` / dayofmonth(last_day(`c`.`request_date`)))),2) AS `avg_monthly_billing` from ((`eyefidb`.`fs_billing_labor_view` `a` join `eyefidb`.`fs_workOrder` `b` on((`b`.`id` = `a`.`workOrderId`))) join `eyefidb`.`fs_scheduler` `c` on((`c`.`id` = `b`.`fs_scheduler_id`))) group by monthname(`c`.`request_date`),year(`c`.`request_date`),month(`c`.`request_date`),dayofmonth(last_day(`c`.`request_date`)) order by year(`c`.`request_date`) desc,month(`c`.`request_date`);

DROP TABLE IF EXISTS `fs_billing_labor_view`;
CREATE ALGORITHM=TEMPTABLE DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_billing_labor_view` AS select `a`.`workOrderId` AS `workOrderId`,`a`.`typeOf` AS `typeOf`,sum(`a`.`total`) AS `total_hrs`,sum((case when ((`a`.`typeOf` = 'Regular') and (`a`.`total` <= 8)) then 0 else `a`.`break` end)) AS `break_hrs`,`a`.`cost_rate` AS `cost_rate`,(sum(`a`.`total`) * `a`.`cost_rate`) AS `cost_total`,`a`.`billing_rate` AS `billing_rate`,(sum(`a`.`total`) * `a`.`billing_rate`) AS `billing_total`,sum(`a`.`total_techs`) AS `total_techs` from (select `a`.`workOrderId` AS `workOrderId`,'Regular' AS `typeOf`,(`a`.`total` - `a`.`total_overtime`) AS `total`,(case when isnull(`c`.`per_tech_rate`) then `team`.`combined_rates` else (`c`.`per_tech_rate` * `team`.`total_techs`) end) AS `cost_rate`,(case when isnull(`c`.`per_tech_rate`) then ((`a`.`total` - `a`.`total_overtime`) * `team`.`combined_rates`) else (`c`.`per_tech_rate` * `team`.`total_techs`) end) AS `cost_total`,(case when isnull(`c`.`per_tech_rate`) then `c`.`ef_hourly_rate` else (`c`.`ef_hourly_rate` * `team`.`total_techs`) end) AS `billing_rate`,((`a`.`total` - `a`.`total_overtime`) * `c`.`ef_hourly_rate`) AS `billing_total`,`team`.`total_techs` AS `total_techs`,`a`.`break` AS `break` from (((`eyefidb`.`fs_billing_view` `a` left join `eyefidb`.`fs_workOrder` `b` on((`b`.`id` = `a`.`workOrderId`))) left join `eyefidb`.`fs_scheduler` `c` on((`c`.`id` = `b`.`fs_scheduler_id`))) left join (select `eyefidb`.`fs_team`.`fs_det_id` AS `fs_det_id`,sum(`eyefidb`.`fs_team`.`user_rate`) AS `combined_rates`,count(`eyefidb`.`fs_team`.`id`) AS `total_techs` from `eyefidb`.`fs_team` group by `eyefidb`.`fs_team`.`fs_det_id`) `team` on((`team`.`fs_det_id` = `c`.`id`))) union all select `a`.`workOrderId` AS `workOrderId`,'Overtime' AS `typeOf`,`a`.`total_overtime` AS `total`,(case when isnull(`c`.`per_tech_rate_ot`) then (`team`.`combined_rates` * 1.50) else (`c`.`per_tech_rate_ot` * `team`.`total_techs`) end) AS `cost_rate`,(case when isnull(`c`.`per_tech_rate_ot`) then (`a`.`total_overtime` * `team`.`combined_rates`) else (`c`.`per_tech_rate_ot` * `team`.`total_techs`) end) AS `cost_total`,(case when isnull(`c`.`per_tech_rate_ot`) then `c`.`ef_overtime_hourly_rate` else (`c`.`ef_overtime_hourly_rate` * `team`.`total_techs`) end) AS `billing_rate`,(`a`.`total_overtime` * `c`.`ef_overtime_hourly_rate`) AS `billing_total`,`team`.`total_techs` AS `total_techs`,`a`.`break` AS `break` from (((`eyefidb`.`fs_billing_view` `a` left join `eyefidb`.`fs_workOrder` `b` on((`b`.`id` = `a`.`workOrderId`))) left join `eyefidb`.`fs_scheduler` `c` on((`c`.`id` = `b`.`fs_scheduler_id`))) left join (select `eyefidb`.`fs_team`.`fs_det_id` AS `fs_det_id`,sum(`eyefidb`.`fs_team`.`user_rate`) AS `combined_rates`,count(`eyefidb`.`fs_team`.`id`) AS `total_techs` from `eyefidb`.`fs_team` group by `eyefidb`.`fs_team`.`fs_det_id`) `team` on((`team`.`fs_det_id` = `c`.`id`)))) `a` group by `a`.`workOrderId`,`a`.`typeOf`,`a`.`cost_rate`,`a`.`billing_rate`,`a`.`total_techs` order by `a`.`typeOf` desc;

DROP TABLE IF EXISTS `fs_billing_summary_detail_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_billing_summary_detail_view` AS select `c`.`request_date` AS `request_date`,`a`.`id` AS `id`,`labor`.`billing_total` AS `labor_bill_amount`,`expense`.`billing` AS `expense_bill_amount`,(`labor`.`billing_total` + `expense`.`billing`) AS `total_to_bill`,`c`.`invoice` AS `invoice_amount` from (((`eyefidb`.`fs_workOrder` `a` left join (select `fs_billing_labor_view`.`workOrderId` AS `workOrderId`,sum(`fs_billing_labor_view`.`billing_total`) AS `billing_total` from `eyefidb`.`fs_billing_labor_view` group by `fs_billing_labor_view`.`workOrderId`) `labor` on((`labor`.`workOrderId` = `a`.`id`))) left join (select `fs_billing_expense_view`.`workOrderId` AS `workOrderId`,sum(`fs_billing_expense_view`.`billing`) AS `billing` from `eyefidb`.`fs_billing_expense_view` group by `fs_billing_expense_view`.`workOrderId`) `expense` on((`expense`.`workOrderId` = `a`.`id`))) join `eyefidb`.`fs_scheduler` `c` on((`c`.`id` = `a`.`fs_scheduler_id`)));

DROP TABLE IF EXISTS `fs_billing_summary_monthly_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_billing_summary_monthly_view` AS select monthname(`fs_billing_summary_detail_view`.`request_date`) AS `month`,month(`fs_billing_summary_detail_view`.`request_date`) AS `MONTH(request_date)`,year(`fs_billing_summary_detail_view`.`request_date`) AS `year`,sum(`fs_billing_summary_detail_view`.`labor_bill_amount`) AS `total_labor_bill_amount`,sum(`fs_billing_summary_detail_view`.`expense_bill_amount`) AS `total_expense_bill_amount`,sum(`fs_billing_summary_detail_view`.`total_to_bill`) AS `total_to_bill`,sum(`fs_billing_summary_detail_view`.`invoice_amount`) AS `total_invoice_amount` from `eyefidb`.`fs_billing_summary_detail_view` group by monthname(`fs_billing_summary_detail_view`.`request_date`),month(`fs_billing_summary_detail_view`.`request_date`),year(`fs_billing_summary_detail_view`.`request_date`);

DROP TABLE IF EXISTS `fs_billing_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_billing_view` AS select `a`.`workOrderId` AS `workOrderId`,`a`.`isWeekEnd` AS `isWeekEnd`,`a`.`start` AS `start`,`a`.`travel_total` AS `travel`,`a`.`travel_overtime` AS `travel_overtime`,`a`.`install` AS `install`,`a`.`install_overtime` AS `install_overtime`,(case when (`a`.`isWeekEnd` = 1) then `a`.`total` when (`a`.`total` > 8) then (`a`.`total` - 8) else (`a`.`travel_overtime` + `a`.`install_overtime`) end) AS `total_overtime`,`a`.`total` AS `total`,`a`.`break` AS `break` from (select `a`.`workOrderId` AS `workOrderId`,`a`.`start` AS `start`,`a`.`isWeekEnd` AS `isWeekEnd`,`a`.`totalHrs` AS `totalHrs`,`a`.`travel` AS `travel`,`a`.`travel_overtime` AS `travel_overtime`,`a`.`install` AS `install`,`a`.`install_overtime` AS `install_overtime`,`a`.`break` AS `break`,`a`.`travel` AS `travel_total`,(((`a`.`travel` + `a`.`travel_overtime`) + `a`.`install`) + `a`.`install_overtime`) AS `total` from (select `a`.`workOrderId` AS `workOrderId`,`a`.`start` AS `start`,max(`a`.`isWeekEnd`) AS `isWeekEnd`,sum(`a`.`totalHrs`) AS `totalHrs`,sum((case when (`a`.`isTravel` = 1) then (case when (`a`.`isWeekEnd` = 0) then (case when (`a`.`totalHrs` > 8) then 8 when (`a`.`totalHrs` <= 8) then `a`.`totalHrs` else 0 end) when (`a`.`isWeekEnd` = 1) then 0 else 0 end) else 0 end)) AS `travel`,sum((case when (`a`.`isTravel` = 1) then (case when (`a`.`isWeekEnd` = 0) then (case when (`a`.`totalHrs` > 8) then (`a`.`totalHrs` - 8) else 0 end) when (`a`.`isWeekEnd` = 1) then `a`.`totalHrs` else 0 end) else 0 end)) AS `travel_overtime`,sum((case when (`a`.`isTravel` = 0) then (case when (`a`.`isWeekEnd` = 0) then `a`.`actualHrs` when (`a`.`isWeekEnd` = 1) then 0 else 0 end) else 0 end)) AS `install`,sum((case when (`a`.`isTravel` = 0) then (case when (`a`.`isWeekEnd` = 0) then (case when (`a`.`totalHrs` > 8) then (`a`.`totalHrs` - 8) else 0 end) when (`a`.`isWeekEnd` = 1) then `a`.`totalHrs` else 0 end) else 0 end)) AS `install_overtime`,ifnull(sum(`a`.`brkhrs`),0) AS `break` from (select `a`.`workOrderId` AS `workOrderId`,`a`.`start` AS `start`,`a`.`end` AS `end`,`a`.`isTravel` AS `isTravel`,`a`.`isWeekEnd` AS `isWeekEnd`,`a`.`brkhrs` AS `brkhrs`,`a`.`totalHrs` AS `totalHrs`,(case when (`a`.`totalHrs` > 8) then (`a`.`totalHrs` - 8) else 0 end) AS `overtime`,(case when (`a`.`totalHrs` <= 8) then `a`.`totalHrs` else (`a`.`totalHrs` - (case when (`a`.`totalHrs` > 8) then (`a`.`totalHrs` - 8) else 0 end)) end) AS `actualHrs` from (select `a`.`workOrderId` AS `workOrderId`,`a`.`start` AS `start`,`a`.`end` AS `end`,`a`.`isTravel` AS `isTravel`,max(`a`.`isWeekEnd`) AS `isWeekEnd`,truncate(((sum(`a`.`total_break`) + sum(`a`.`total_break_project`)) / 60),2) AS `brkhrs`,round((sum(`a`.`totalHours`) / 60),2) AS `totalHrs` from (select `fs_labor_view`.`workOrderId` AS `workOrderId`,`fs_labor_view`.`isWeekEnd` AS `isWeekEnd`,(case when ((to_days(date_format(cast(`fs_labor_view`.`projectStart` as date),'%Y-%m-%d')) - to_days(date_format(cast(`fs_labor_view`.`projectFinish` as date),'%Y-%m-%d'))) < 0) then concat(date_format(cast(`fs_labor_view`.`projectStart` as date),'%m/%d/%Y'),' to ',date_format(cast(`fs_labor_view`.`projectFinish` as date),'%m/%d/%Y')) else date_format(cast(`fs_labor_view`.`projectStart` as date),'%m/%d/%Y') end) AS `start`,date_format(cast(`fs_labor_view`.`projectFinish` as date),'%m/%d/%Y') AS `end`,(case when (`fs_labor_view`.`isBreak` = 0) then `fs_labor_view`.`mins` else 0 end) AS `totalHours`,`fs_labor_view`.`break_mins` AS `total_break`,`fs_labor_view`.`event_break_mins` AS `total_break_project`,`fs_labor_view`.`event_name` AS `proj_type`,`fs_labor_view`.`isTravel` AS `isTravel`,`fs_labor_view`.`isEvent` AS `isEvent` from `eyefidb`.`fs_labor_view` where (`fs_labor_view`.`isEvent` = 1) order by `fs_labor_view`.`projectStart`) `a` group by `a`.`workOrderId`,`a`.`start`,`a`.`end`,`a`.`isEvent`,`a`.`isTravel`) `a`) `a` where (`a`.`start` is not null) group by `a`.`workOrderId`,`a`.`start`) `a` order by `a`.`start`) `a`;

DROP TABLE IF EXISTS `fs_full_events`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `fs_full_events` AS select `eyefidb`.`companyHoliday`.`id` AS `id`,date_format(`eyefidb`.`companyHoliday`.`start`,'%Y-%m-%d') AS `full_request_date`,date_format(`eyefidb`.`companyHoliday`.`start`,'%Y-%m-%d') AS `request_date`,date_format(`eyefidb`.`companyHoliday`.`end`,'%Y-%m-%d') AS `end_date`,concat(`eyefidb`.`companyHoliday`.`type`) AS `property`,'Event' AS `typeOf`,'' AS `service_type`,'' AS `out_of_state`,'' AS `fs_scheduler_id`,'Event' AS `status`,1 AS `active`,`eyefidb`.`companyHoliday`.`type` AS `title`,`eyefidb`.`companyHoliday`.`title` AS `team`,NULL AS `dateSubmitted`,'' AS `workOrderTicketId`,'' AS `group_id`,timestampdiff(MINUTE,date_format(curdate(),'%Y-%m-%d %H:%m'),date_format(`eyefidb`.`companyHoliday`.`start`,'%Y-%m-%d %H:%m')) AS `timediff`,'' AS `platform`,`eyefidb`.`companyHoliday`.`start` AS `start`,`eyefidb`.`companyHoliday`.`start` AS `date` from `eyefidb`.`companyHoliday` where (date_format(`eyefidb`.`companyHoliday`.`start`,'%Y-%m-%d') >= curdate()) union all select `a`.`id` AS `id`,concat(`a`.`request_date`,' ',`a`.`start_time`) AS `full_request_date`,concat(`a`.`request_date`,' ',`a`.`start_time`) AS `request_date`,concat(`a`.`request_date`,' ',`a`.`start_time`) AS `end_date`,`property`.`property` AS `property`,'Job' AS `typeOf`,`a`.`service_type` AS `service_type`,`a`.`out_of_state` AS `out_of_state`,`b`.`id` AS `fs_scheduler_id`,`a`.`status` AS `status`,`a`.`active` AS `active`,concat(`a`.`customer`,' ',convert(`property`.`property` using utf8)) AS `title`,`e`.`team` AS `team`,`b`.`dateSubmitted` AS `dateSubmitted`,`b`.`id` AS `workOrderTicketId`,`a`.`group_id` AS `group_id`,timestampdiff(MINUTE,date_format(curdate(),'%Y-%m-%d %H:%m'),concat(`a`.`request_date`,' ',`a`.`start_time`)) AS `timediff`,`a`.`platform` AS `platform`,`a`.`start_time` AS `start`,date_format(`a`.`request_date`,'%Y-%m-%d') AS `date` from (((`eyefidb`.`fs_scheduler` `a` left join (select `eyefidb`.`fs_workOrder`.`fs_scheduler_id` AS `fs_scheduler_id`,count(`eyefidb`.`fs_workOrder`.`fs_scheduler_id`) AS `hits`,max(`eyefidb`.`fs_workOrder`.`dateSubmitted`) AS `dateSubmitted`,max(`eyefidb`.`fs_workOrder`.`id`) AS `id` from `eyefidb`.`fs_workOrder` group by `eyefidb`.`fs_workOrder`.`fs_scheduler_id`) `b` on((`b`.`fs_scheduler_id` = `a`.`id`))) left join (select `eyefidb`.`fs_team`.`fs_det_id` AS `fs_det_id`,group_concat(`eyefidb`.`fs_team`.`user` separator ', ') AS `team` from `eyefidb`.`fs_team` group by `eyefidb`.`fs_team`.`fs_det_id`) `e` on((`e`.`fs_det_id` = `a`.`id`))) left join (select `eyefidb`.`fs_property_det`.`id` AS `id`,`eyefidb`.`fs_property_det`.`property` AS `property`,`eyefidb`.`fs_property_det`.`city` AS `city`,`eyefidb`.`fs_property_det`.`state` AS `state`,concat_ws(',',nullif(trim(`eyefidb`.`fs_property_det`.`property`),''),nullif(trim(`eyefidb`.`fs_property_det`.`address1`),''),nullif(trim(`eyefidb`.`fs_property_det`.`city`),''),nullif(trim(`eyefidb`.`fs_property_det`.`state`),''),nullif(trim(`eyefidb`.`fs_property_det`.`zip_code`),''),nullif(trim(`eyefidb`.`fs_property_det`.`property_phone`),'')) AS `full_address` from `eyefidb`.`fs_property_det`) `property` on((`property`.`id` = `a`.`property_id`))) where ((`a`.`active` = 1) and (`a`.`published` = 1));

DROP TABLE IF EXISTS `fs_full_timeline`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `fs_full_timeline` AS select `a`.`workOrderId` AS `workOrderId`,`a`.`START` AS `START`,`a`.`END` AS `END`,`a`.`hrs` AS `hrs`,`a`.`TYPE` AS `TYPE`,`a`.`project_type` AS `project_type`,`a`.`isTravel` AS `isTravel`,ifnull((case when (`a`.`project_type` = 'Break') then `a`.`hrs` else `a`.`brkhrs` end),0) AS `brkhrs` from (select `eyefidb`.`fs_workOrderProject`.`workOrderId` AS `workOrderId`,`eyefidb`.`fs_workOrderProject`.`projectStart` AS `START`,`eyefidb`.`fs_workOrderProject`.`projectFinish` AS `END`,timestampdiff(MINUTE,`eyefidb`.`fs_workOrderProject`.`projectStart`,`eyefidb`.`fs_workOrderProject`.`projectFinish`) AS `hrs`,0 AS `brkhrs`,'workorder' AS `TYPE`,`eyefidb`.`fs_workOrderProject`.`proj_type` AS `project_type`,(case when (`eyefidb`.`fs_workOrderProject`.`proj_type` like '%Travel%') then 1 else 0 end) AS `isTravel` from `eyefidb`.`fs_workOrderProject` where ((`eyefidb`.`fs_workOrderProject`.`projectStart` is not null) and (`eyefidb`.`fs_workOrderProject`.`projectFinish` is not null))) `a` union all select `b`.`workOrderId` AS `workOrderId`,`b`.`START` AS `START`,`b`.`END` AS `END`,`b`.`hrs` AS `hrs`,`b`.`TYPE` AS `TYPE`,`b`.`project_type` AS `project_type`,`b`.`isInstall` AS `isInstall`,ifnull(`b`.`brkhrs`,0) AS `brkhrs` from (select `eyefidb`.`fs_workOrderDetail`.`workOrderId` AS `workOrderId`,`eyefidb`.`fs_workOrderDetail`.`flyStart` AS `START`,`eyefidb`.`fs_workOrderDetail`.`flyEnd` AS `END`,timestampdiff(MINUTE,`eyefidb`.`fs_workOrderDetail`.`flyStart`,`eyefidb`.`fs_workOrderDetail`.`flyEnd`) AS `hrs`,timestampdiff(MINUTE,`eyefidb`.`fs_workOrderDetail`.`flyBreakStart`,`eyefidb`.`fs_workOrderDetail`.`flyBreakEnd`) AS `brkhrs`,'travel' AS `TYPE`,concat('Fly - ',`eyefidb`.`fs_workOrderDetail`.`travelType`) AS `project_type`,1 AS `isInstall` from `eyefidb`.`fs_workOrderDetail` where ((`eyefidb`.`fs_workOrderDetail`.`flyStart` is not null) and (`eyefidb`.`fs_workOrderDetail`.`flyEnd` is not null))) `b` union all select `c`.`workOrderId` AS `workOrderId`,`c`.`START` AS `START`,`c`.`END` AS `END`,`c`.`hrs` AS `hrs`,`c`.`TYPE` AS `TYPE`,`c`.`project_type` AS `project_type`,`c`.`isInstall` AS `isInstall`,ifnull(`c`.`brkhrs`,0) AS `brkhrs` from (select `eyefidb`.`fs_workOrderDetail`.`workOrderId` AS `workOrderId`,`eyefidb`.`fs_workOrderDetail`.`drStart` AS `START`,`eyefidb`.`fs_workOrderDetail`.`drEnd` AS `END`,timestampdiff(MINUTE,`eyefidb`.`fs_workOrderDetail`.`drStart`,`eyefidb`.`fs_workOrderDetail`.`drEnd`) AS `hrs`,timestampdiff(MINUTE,`eyefidb`.`fs_workOrderDetail`.`drBreakStart`,`eyefidb`.`fs_workOrderDetail`.`drBreakEnd`) AS `brkhrs`,'travel' AS `TYPE`,concat('Drive - ',`eyefidb`.`fs_workOrderDetail`.`travelType`) AS `project_type`,1 AS `isInstall` from `eyefidb`.`fs_workOrderDetail` where ((`eyefidb`.`fs_workOrderDetail`.`drStart` is not null) and (`eyefidb`.`fs_workOrderDetail`.`drEnd` is not null))) `c` order by `workOrderId`,`START`,`END`;

DROP TABLE IF EXISTS `fs_labor_ext_DELETE`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_labor_ext_DELETE` AS select `a`.`id` AS `id`,`a`.`workOrderId` AS `workOrderId`,`a`.`proj_type` AS `proj_type`,`a`.`description` AS `description`,`a`.`projectStart` AS `projectStart`,`a`.`projectFinish` AS `projectFinish`,`a`.`totalHours` AS `totalHours`,`a`.`createdDate` AS `createdDate`,`a`.`userId` AS `userId`,`a`.`active` AS `active`,`a`.`seq` AS `seq`,`a`.`brStart` AS `brStart`,`a`.`brEnd` AS `brEnd`,`a`.`flight_hrs_delay` AS `flight_hrs_delay`,`a`.`projectStartTz` AS `projectStartTz`,`a`.`projectFinishTz` AS `projectFinishTz`,`a`.`timezone_set` AS `timezone_set`,`a`.`projectStartTzConvert` AS `projectStartTzConvert`,`a`.`projectFinishTzConvert` AS `projectFinishTzConvert`,timediff(`a`.`projectFinishTzConvert`,`a`.`projectStartTzConvert`) AS `timeDifference`,(case when (isnull(`a`.`projectFinishTz`) and isnull(`a`.`projectStartTz`)) then timestampdiff(MINUTE,`a`.`projectStart`,`a`.`projectFinish`) else timestampdiff(MINUTE,`a`.`projectStartTzConvert`,`a`.`projectFinishTzConvert`) end) AS `timeDifferenceMins` from (select `eyefidb`.`fs_workOrderProject`.`id` AS `id`,`eyefidb`.`fs_workOrderProject`.`workOrderId` AS `workOrderId`,`eyefidb`.`fs_workOrderProject`.`proj_type` AS `proj_type`,`eyefidb`.`fs_workOrderProject`.`description` AS `description`,`eyefidb`.`fs_workOrderProject`.`projectStart` AS `projectStart`,`eyefidb`.`fs_workOrderProject`.`projectFinish` AS `projectFinish`,`eyefidb`.`fs_workOrderProject`.`totalHours` AS `totalHours`,`eyefidb`.`fs_workOrderProject`.`createdDate` AS `createdDate`,`eyefidb`.`fs_workOrderProject`.`userId` AS `userId`,`eyefidb`.`fs_workOrderProject`.`active` AS `active`,`eyefidb`.`fs_workOrderProject`.`seq` AS `seq`,`eyefidb`.`fs_workOrderProject`.`brStart` AS `brStart`,`eyefidb`.`fs_workOrderProject`.`brEnd` AS `brEnd`,`eyefidb`.`fs_workOrderProject`.`flight_hrs_delay` AS `flight_hrs_delay`,`eyefidb`.`fs_workOrderProject`.`projectStartTz` AS `projectStartTz`,`eyefidb`.`fs_workOrderProject`.`projectFinishTz` AS `projectFinishTz`,(case when ((`eyefidb`.`fs_workOrderProject`.`projectFinishTz` is not null) and (`eyefidb`.`fs_workOrderProject`.`projectStartTz` is not null)) then 1 else 0 end) AS `timezone_set`,convert_tz(`eyefidb`.`fs_workOrderProject`.`projectStart`,`eyefidb`.`fs_workOrderProject`.`projectStartTz`,'PST8PDT') AS `projectStartTzConvert`,convert_tz(`eyefidb`.`fs_workOrderProject`.`projectFinish`,`eyefidb`.`fs_workOrderProject`.`projectFinishTz`,'PST8PDT') AS `projectFinishTzConvert` from `eyefidb`.`fs_workOrderProject` order by `eyefidb`.`fs_workOrderProject`.`projectFinishTz` desc) `a`;

DROP TABLE IF EXISTS `fs_labor_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `fs_labor_view` AS select `a`.`id` AS `id`,`a`.`workOrderId` AS `workOrderId`,(case when isnull(`a`.`event_name`) then `a`.`proj_type` else convert(`a`.`event_name` using utf8mb4) end) AS `event_name`,`a`.`description` AS `description`,`a`.`projectStart` AS `projectStart`,`a`.`projectFinish` AS `projectFinish`,`a`.`createdDate` AS `createdDate`,`a`.`userId` AS `userId`,`a`.`active` AS `active`,`a`.`brStart` AS `brStart`,`a`.`brEnd` AS `brEnd`,`a`.`flight_hrs_delay` AS `flight_hrs_delay`,`a`.`projectStartTz` AS `projectStartTz`,`a`.`projectFinishTz` AS `projectFinishTz`,(`a`.`mins` + `a`.`break_mins`) AS `mins`,round(((`a`.`mins` + `a`.`break_mins`) / 60),2) AS `qtr_hrs`,sec_to_time(((`a`.`mins` + `a`.`break_mins`) * 60)) AS `time`,`a`.`break_mins` AS `break_mins`,`a`.`event_break_mins` AS `event_break_mins`,`a`.`isEvent` AS `isEvent`,`a`.`event_type` AS `event_type`,`a`.`isBreak` AS `isBreak`,`a`.`isTravel` AS `isTravel`,`a`.`isWeekEnd` AS `isWeekEnd`,`a`.`include_calculation` AS `include_calculation` from (select `a`.`id` AS `id`,`a`.`workOrderId` AS `workOrderId`,`a`.`proj_type` AS `proj_type`,`a`.`event_id` AS `event_id`,`a`.`description` AS `description`,`a`.`projectStart` AS `projectStart`,`a`.`projectFinish` AS `projectFinish`,`a`.`totalHours` AS `totalHours`,`a`.`createdDate` AS `createdDate`,`a`.`userId` AS `userId`,`a`.`active` AS `active`,`a`.`seq` AS `seq`,`a`.`brStart` AS `brStart`,`a`.`brEnd` AS `brEnd`,`a`.`flight_hrs_delay` AS `flight_hrs_delay`,`a`.`projectStartTz` AS `projectStartTz`,`a`.`projectFinishTz` AS `projectFinishTz`,`a`.`include_calculation` AS `include_calculation`,`b`.`isEvent` AS `isEvent`,`b`.`event_type` AS `event_type`,`b`.`isBreak` AS `isBreak`,`b`.`isTravel` AS `isTravel`,`b`.`event_name` AS `event_name`,(case when (dayofweek(`a`.`projectStart`) in (1,7)) then 1 else 0 end) AS `isWeekEnd`,(case when (`b`.`isBreak` = 1) then (-(1) * timestampdiff(MINUTE,`a`.`projectStart`,`a`.`projectFinish`)) else (case when ((`a`.`projectFinishTz` is not null) and (`a`.`projectStartTz` is not null)) then timestampdiff(MINUTE,convert_tz(`a`.`projectStart`,`a`.`projectStartTz`,'PST8PDT'),convert_tz(`a`.`projectFinish`,`a`.`projectFinishTz`,'PST8PDT')) else timestampdiff(MINUTE,`a`.`projectStart`,`a`.`projectFinish`) end) end) AS `mins`,ifnull((-(1) * timestampdiff(MINUTE,`a`.`brStart`,`a`.`brEnd`)),0) AS `break_mins`,(case when (`b`.`isBreak` = 1) then (-(1) * timestampdiff(MINUTE,`a`.`projectStart`,`a`.`projectFinish`)) else 0 end) AS `event_break_mins` from (`eyefidb`.`fs_workOrderProject` `a` left join `eyefidb`.`fs_event_type` `b` on((convert(`b`.`event_name` using utf8mb4) = `a`.`proj_type`)))) `a`;

DROP TABLE IF EXISTS `fs_platform_avg_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_platform_avg_view` AS select `fs_work_order_summary_view`.`platform` AS `platform`,`fs_work_order_summary_view`.`service_type` AS `service_type`,sum(`fs_work_order_summary_view`.`service_mins`) AS `total_mins`,truncate(avg(`fs_work_order_summary_view`.`service_mins`),2) AS `avg_mins`,count(`fs_work_order_summary_view`.`platform`) AS `jobs` from `eyefidb`.`fs_work_order_summary_view` where (`fs_work_order_summary_view`.`platform` <> '') group by `fs_work_order_summary_view`.`platform`,`fs_work_order_summary_view`.`service_type`;

DROP TABLE IF EXISTS `fs_property_det_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `fs_property_det_view` AS select `fs_property_det`.`id` AS `id`,`fs_property_det`.`property` AS `property`,`fs_property_det`.`address1` AS `address1`,`fs_property_det`.`address2` AS `address2`,`fs_property_det`.`city` AS `city`,`fs_property_det`.`state` AS `state`,`fs_property_det`.`zip_code` AS `zip_code`,`fs_property_det`.`country` AS `country`,`fs_property_det`.`fs_customer_id` AS `fs_customer_id`,`fs_property_det`.`property_phone` AS `property_phone`,`fs_property_det`.`active` AS `active`,`fs_property_det`.`lat` AS `lat`,`fs_property_det`.`lon` AS `lon`,`fs_property_det`.`out_of_town` AS `out_of_town`,concat_ws(',',nullif(trim(`fs_property_det`.`property`),''),nullif(trim(`fs_property_det`.`address1`),''),nullif(trim(`fs_property_det`.`city`),''),nullif(trim(`fs_property_det`.`state`),''),nullif(trim(`fs_property_det`.`zip_code`),''),nullif(trim(`fs_property_det`.`property_phone`),'')) AS `full_address` from `fs_property_det`;

DROP TABLE IF EXISTS `fs_scheduler_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_scheduler_view` AS select `a`.`id` AS `id`,`a`.`queue` AS `queue`,(to_days(curdate()) - to_days(`b`.`dateSubmitted`)) AS `age_from_ticket_submitted`,(to_days(curdate()) - to_days(`b`.`createdDate`)) AS `age_from_ticket_started`,(to_days(concat(`a`.`request_date`,' ',`a`.`start_time`)) - to_days(curdate())) AS `days_before_service`,`a`.`id` AS `fs_scheduler_id`,`a`.`requested_by` AS `requested_by`,`a`.`queue` AS `queue_status`,`a`.`status` AS `status`,`a`.`sales_order_number` AS `sales_order_number`,`a`.`invoice` AS `invoice`,`a`.`service_type` AS `service_type`,`a`.`customer` AS `customer`,`a`.`property` AS `property`,`a`.`city` AS `location`,`a`.`state` AS `state`,`a`.`sign_theme` AS `sign_theme`,`a`.`sign_type` AS `sign_type`,`a`.`comments` AS `comments`,`a`.`start_time` AS `start_time`,`a`.`notes` AS `notes`,`a`.`created_date` AS `created_date`,`a`.`created_by` AS `created_by`,`a`.`vendor_inv_number` AS `vendor_inv_number`,`a`.`vendor_cost` AS `vendor_cost`,`a`.`invoice_date` AS `invoice_date`,`a`.`invoice_number` AS `invoice_number`,`a`.`acc_status` AS `acc_status`,`a`.`platform` AS `platform`,`a`.`billable` AS `billable`,`a`.`request_date` AS `request_date`,ifnull(`e`.`team`,'No techs assigned') AS `installers`,`e`.`isVendor` AS `isVendor`,`e`.`total_techs` AS `total_techs`,concat(`a`.`id`,'-',`b`.`id`) AS `fullWorkOrderId`,`b`.`dateSubmitted` AS `dateSubmitted`,`b`.`id` AS `workOrderTicketId`,`b`.`createdDate` AS `createdDateWorkOrder`,`b`.`created_by` AS `createdByWorkOrder`,(case when isnull(`c`.`timeToComplete`) then 120 else `c`.`timeToComplete` end) AS `timeToComplete`,concat(`a`.`request_date`,' ',`a`.`start_time`) AS `full_request_date`,(concat(`a`.`request_date`,' ',`a`.`start_time`) + interval (case when isnull(`c`.`timeToComplete`) then 120 else `c`.`timeToComplete` end) minute) AS `endTime`,`a`.`co_number` AS `co_number`,`a`.`customer_cancelled` AS `customer_cancelled`,`a`.`cancellation_comments` AS `cancellation_comments`,`a`.`cancelled_type` AS `cancelled_type`,`a`.`out_of_state` AS `out_of_state`,`a`.`invoice_notes` AS `invoice_notes`,concat(`a`.`customer`,' ',convert(`a`.`property` using utf8),' (',`a`.`service_type`,')') AS `title`,(case when (`a`.`published` = 0) then '#fff' else `f`.`statusColor` end) AS `backgroundColor`,(case when isnull(`f`.`statusColor`) then `f`.`statusColor` else `f`.`statusColor` end) AS `borderColor`,(case when (isnull(`f`.`color`) or (`a`.`published` = 0)) then '#000' else `f`.`color` end) AS `color`,`a`.`property_phone` AS `property_phone_number`,`a`.`zip_code` AS `zip_code`,`a`.`compliance_license_notes` AS `compliance_license_notes`,`user`.`createdByUserName` AS `createdByUserName`,`a`.`turnover_fsid` AS `turnover_fsid`,`a`.`group_id` AS `group_id`,concat_ws(',',nullif(trim(`a`.`property`),''),nullif(trim(`a`.`address1`),''),nullif(trim(`a`.`city`),''),nullif(trim(`a`.`state`),''),nullif(trim(`a`.`zip_code`),''),nullif(trim(`a`.`property_phone`),'')) AS `full_address`,`a`.`published` AS `published`,`misc`.`eyeFiAsset` AS `eyeFiAsset`,`misc`.`customerAsset` AS `customerAsset`,`a`.`paper_work_location` AS `paper_work_location`,(case when (`a`.`state` in ('ME','NH','VT','NY','MA','CT','RI','NJ','PA','DE','DC','WV','VA','MD')) then 'Zone 1' when (`a`.`state` in ('TN','NC','SC','GA','FL','AL','MS')) then 'Zone 2' when (`a`.`state` in ('MN','WI','MI','OH','IN','KY','IL','IA','MO')) then 'Zone 3' when (`a`.`state` in ('AR','LA','TX','OK')) then 'Zone 4' when (`a`.`state` in ('MT','ND','SD','WY','BE','KS','CO')) then 'Zone 5' when (`a`.`state` in ('UT','NM','AZ')) then 'Zone 6' when ((`a`.`state` = 'NV') and (`a`.`city` not in ('Las Vegas','Henderson','Boulder City','Mesquite','Pahrump','Laughlin'))) then 'Zone 7' when (`a`.`state` in ('ID','OR','WA')) then 'Zone 8' when (`a`.`state` = 'CA') then 'Zone 9' when (`a`.`city` in ('Las Vegas','Henderson')) then 'Local-1' when (`a`.`city` in ('Boulder City','Mesquite','Pahrump','Laughlin')) then 'Local-2' end) AS `zone_codes`,`e`.`contractor_codes` AS `contractor_codes`,`a`.`fs_calendar_id` AS `fs_calendar_id`,`a`.`active` AS `active`,`a`.`notice_email_date` AS `notice_email_date`,`a`.`request_id` AS `request_id`,`a`.`fs_lat` AS `fs_lat`,`a`.`fs_lon` AS `fs_lon` from (((((((`eyefidb`.`fs_scheduler` `a` left join (select `eyefidb`.`fs_workOrder`.`fs_scheduler_id` AS `fs_scheduler_id`,count(`eyefidb`.`fs_workOrder`.`fs_scheduler_id`) AS `hits`,max(`eyefidb`.`fs_workOrder`.`dateSubmitted`) AS `dateSubmitted`,max(`eyefidb`.`fs_workOrder`.`id`) AS `id`,max(`eyefidb`.`fs_workOrder`.`createdDate`) AS `createdDate`,max(`eyefidb`.`fs_workOrder`.`userId`) AS `created_by` from `eyefidb`.`fs_workOrder` group by `eyefidb`.`fs_workOrder`.`fs_scheduler_id`) `b` on((`b`.`fs_scheduler_id` = `a`.`id`))) left join (select `eyefidb`.`fs_scheduler_platforms`.`name` AS `name`,max(`eyefidb`.`fs_scheduler_platforms`.`timeToComplete`) AS `timeToComplete` from `eyefidb`.`fs_scheduler_platforms` where (`eyefidb`.`fs_scheduler_platforms`.`active` = 1) group by `eyefidb`.`fs_scheduler_platforms`.`name`) `c` on((`a`.`platform` = convert(`c`.`name` using utf8)))) left join (select `eyefidb`.`fs_scheduler_settings`.`type` AS `type`,`eyefidb`.`fs_scheduler_settings`.`value` AS `value`,max(`eyefidb`.`fs_scheduler_settings`.`statusColor`) AS `backgroundColor`,max(`eyefidb`.`fs_scheduler_settings`.`color`) AS `color` from `eyefidb`.`fs_scheduler_settings` where (`eyefidb`.`fs_scheduler_settings`.`type` = 'status') group by `eyefidb`.`fs_scheduler_settings`.`type`,`eyefidb`.`fs_scheduler_settings`.`value`) `d` on((convert(`d`.`value` using utf8) = `a`.`status`))) left join (select `a`.`fs_det_id` AS `fs_det_id`,group_concat(`a`.`user` order by `a`.`user` ASC separator ', ') AS `team`,group_concat(`a`.`contractor_code` order by `a`.`contractor_code` ASC separator ', ') AS `contractor_codes`,count(`a`.`fs_det_id`) AS `total_techs`,count((case when (`b`.`id` is not null) then 1 end)) AS `isVendor` from (`eyefidb`.`fs_team` `a` left join `eyefidb`.`fs_vendors` `b` on((`b`.`name` = `a`.`user`))) group by `a`.`fs_det_id`) `e` on((`e`.`fs_det_id` = `a`.`id`))) left join `eyefidb`.`fs_scheduler_settings` `f` on(((convert(`f`.`value` using utf8) = `a`.`status`) and (`f`.`type` = 'status')))) left join (select concat(`db`.`users`.`first`,' ',`db`.`users`.`last`) AS `createdByUserName`,`db`.`users`.`id` AS `id` from `db`.`users`) `user` on((`user`.`id` = `a`.`created_by`))) left join (select `a`.`workOrderId` AS `workOrderId`,group_concat(distinct `a`.`eyefiAsset` order by `a`.`eyefiAsset` ASC separator ',') AS `eyeFiAsset`,group_concat(distinct `a`.`customerAsset` order by `a`.`customerAsset` ASC separator ',') AS `customerAsset` from `eyefidb`.`fs_workOrderMisc` `a` group by `a`.`workOrderId`) `misc` on((`misc`.`workOrderId` = `b`.`id`)));

DROP TABLE IF EXISTS `fs_summary_DELETE`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `fs_summary_DELETE` AS select `a`.`workOrderId` AS `workOrderId`,`a`.`START` AS `START`,`a`.`END` AS `END`,`a`.`hrs` AS `hrs`,`a`.`TYPE` AS `TYPE`,`a`.`project_type` AS `project_type`,`a`.`break` AS `break` from (select `eyefidb`.`fs_workOrderProject`.`workOrderId` AS `workOrderId`,`eyefidb`.`fs_workOrderProject`.`projectStart` AS `START`,`eyefidb`.`fs_workOrderProject`.`projectFinish` AS `END`,`eyefidb`.`fs_workOrderProject`.`totalHours` AS `hrs`,'workorder' AS `TYPE`,`eyefidb`.`fs_workOrderProject`.`proj_type` AS `project_type`,0 AS `break` from `eyefidb`.`fs_workOrderProject` where ((`eyefidb`.`fs_workOrderProject`.`projectStart` is not null) and (`eyefidb`.`fs_workOrderProject`.`projectFinish` is not null))) `a` union all select `b`.`workOrderId` AS `workOrderId`,`b`.`START` AS `START`,`b`.`END` AS `END`,`b`.`hrs` AS `hrs`,`b`.`TYPE` AS `TYPE`,`b`.`project_type` AS `project_type`,`b`.`break` AS `break` from (select `eyefidb`.`fs_workOrderDetail`.`workOrderId` AS `workOrderId`,`eyefidb`.`fs_workOrderDetail`.`flyStart` AS `START`,`eyefidb`.`fs_workOrderDetail`.`flyEnd` AS `END`,timestampdiff(MINUTE,`eyefidb`.`fs_workOrderDetail`.`flyStart`,`eyefidb`.`fs_workOrderDetail`.`flyEnd`) AS `hrs`,timestampdiff(MINUTE,`eyefidb`.`fs_workOrderDetail`.`flyBreakStart`,`eyefidb`.`fs_workOrderDetail`.`flyBreakEnd`) AS `break`,'Fly travel' AS `TYPE`,`eyefidb`.`fs_workOrderDetail`.`travelType` AS `project_type` from `eyefidb`.`fs_workOrderDetail`) `b` union all select `b`.`workOrderId` AS `workOrderId`,`b`.`START` AS `START`,`b`.`END` AS `END`,`b`.`hrs` AS `hrs`,`b`.`TYPE` AS `TYPE`,`b`.`project_type` AS `project_type`,`b`.`break` AS `break` from (select `eyefidb`.`fs_workOrderDetail`.`workOrderId` AS `workOrderId`,`eyefidb`.`fs_workOrderDetail`.`drStart` AS `START`,`eyefidb`.`fs_workOrderDetail`.`drEnd` AS `END`,timestampdiff(MINUTE,`eyefidb`.`fs_workOrderDetail`.`drStart`,`eyefidb`.`fs_workOrderDetail`.`drEnd`) AS `hrs`,timestampdiff(MINUTE,`eyefidb`.`fs_workOrderDetail`.`drBreakStart`,`eyefidb`.`fs_workOrderDetail`.`drBreakEnd`) AS `break`,'Drive travel' AS `TYPE`,`eyefidb`.`fs_workOrderDetail`.`travelType` AS `project_type` from `eyefidb`.`fs_workOrderDetail`) `b` order by `workOrderId`,`START`,`END`;

DROP TABLE IF EXISTS `fs_time_line_DELETE`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `fs_time_line_DELETE` AS select `a`.`workOrderId` AS `workOrderId`,`a`.`start` AS `start`,`a`.`end` AS `end`,`a`.`hrs` AS `hrs`,`a`.`type` AS `type`,`a`.`project_type` AS `project_type` from (select `eyefidb`.`fs_workOrderProject`.`workOrderId` AS `workOrderId`,`eyefidb`.`fs_workOrderProject`.`projectStart` AS `start`,`eyefidb`.`fs_workOrderProject`.`projectFinish` AS `end`,`eyefidb`.`fs_workOrderProject`.`totalHours` AS `hrs`,'workorder' AS `type`,`eyefidb`.`fs_workOrderProject`.`proj_type` AS `project_type` from `eyefidb`.`fs_workOrderProject` where ((`eyefidb`.`fs_workOrderProject`.`projectStart` is not null) and (`eyefidb`.`fs_workOrderProject`.`projectFinish` is not null))) `a` union all select `b`.`workOrderId` AS `workOrderId`,`b`.`start` AS `start`,`b`.`end` AS `end`,`b`.`hrs` AS `hrs`,`b`.`type` AS `type`,`b`.`project_type` AS `project_type` from (select `eyefidb`.`fs_workOrderDetail`.`workOrderId` AS `workOrderId`,`eyefidb`.`fs_workOrderDetail`.`flyStart` AS `start`,`eyefidb`.`fs_workOrderDetail`.`flyEnd` AS `end`,`eyefidb`.`fs_workOrderDetail`.`totalHours` AS `hrs`,'travel' AS `type`,`eyefidb`.`fs_workOrderDetail`.`travelType` AS `project_type` from `eyefidb`.`fs_workOrderDetail`) `b` order by `workOrderId`,`start`,`end`;

DROP TABLE IF EXISTS `fs_workOrderProject_ext_DELETE`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `fs_workOrderProject_ext_DELETE` AS select `a`.`id` AS `id`,`a`.`workOrderId` AS `workOrderId`,`a`.`proj_type` AS `proj_type`,`a`.`description` AS `description`,`a`.`projectStart` AS `projectStart`,`a`.`projectFinish` AS `projectFinish`,`a`.`totalHours` AS `totalHours`,`a`.`createdDate` AS `createdDate`,`a`.`userId` AS `userId`,`a`.`active` AS `active`,`a`.`seq` AS `seq`,`a`.`brStart` AS `brStart`,`a`.`brEnd` AS `brEnd`,`a`.`flight_hrs_delay` AS `flight_hrs_delay`,`a`.`projectStartTz` AS `projectStartTz`,`a`.`projectFinishTz` AS `projectFinishTz`,`a`.`projectStartTzConvert` AS `projectStartTzConvert`,`a`.`projectFinishTzConvert` AS `projectFinishTzConvert`,timediff(`a`.`projectStartTzConvert`,`a`.`projectFinishTzConvert`) AS `timeDifference`,timestampdiff(MINUTE,`a`.`projectStartTzConvert`,`a`.`projectFinishTzConvert`) AS `timeDifferenceMins` from (select `eyefidb`.`fs_workOrderProject`.`id` AS `id`,`eyefidb`.`fs_workOrderProject`.`workOrderId` AS `workOrderId`,`eyefidb`.`fs_workOrderProject`.`proj_type` AS `proj_type`,`eyefidb`.`fs_workOrderProject`.`description` AS `description`,`eyefidb`.`fs_workOrderProject`.`projectStart` AS `projectStart`,`eyefidb`.`fs_workOrderProject`.`projectFinish` AS `projectFinish`,`eyefidb`.`fs_workOrderProject`.`totalHours` AS `totalHours`,`eyefidb`.`fs_workOrderProject`.`createdDate` AS `createdDate`,`eyefidb`.`fs_workOrderProject`.`userId` AS `userId`,`eyefidb`.`fs_workOrderProject`.`active` AS `active`,`eyefidb`.`fs_workOrderProject`.`seq` AS `seq`,`eyefidb`.`fs_workOrderProject`.`brStart` AS `brStart`,`eyefidb`.`fs_workOrderProject`.`brEnd` AS `brEnd`,`eyefidb`.`fs_workOrderProject`.`flight_hrs_delay` AS `flight_hrs_delay`,`eyefidb`.`fs_workOrderProject`.`projectStartTz` AS `projectStartTz`,`eyefidb`.`fs_workOrderProject`.`projectFinishTz` AS `projectFinishTz`,convert_tz(`eyefidb`.`fs_workOrderProject`.`projectStart`,`eyefidb`.`fs_workOrderProject`.`projectStartTz`,'PST8PDT') AS `projectStartTzConvert`,convert_tz(`eyefidb`.`fs_workOrderProject`.`projectFinish`,`eyefidb`.`fs_workOrderProject`.`projectFinishTz`,'PST8PDT') AS `projectFinishTzConvert` from `eyefidb`.`fs_workOrderProject` where (`eyefidb`.`fs_workOrderProject`.`workOrderId` = 2567) order by `eyefidb`.`fs_workOrderProject`.`projectFinishTz` desc) `a`;

DROP TABLE IF EXISTS `fs_work_order_event_by_category_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_work_order_event_by_category_view` AS select `a`.`workOrderId` AS `workOrderId`,sum((case when (`a`.`event_type` = 1) then `a`.`mins` else 0 end)) AS `service_mins`,sum((case when (`a`.`event_type` = 2) then `a`.`mins` else 0 end)) AS `travel_mins`,sum((case when (`a`.`event_type` = 3) then `a`.`mins` else 0 end)) AS `non_service_mins`,sum(`a`.`mins`) AS `total_mins`,truncate((sum(`a`.`mins`) / 60),2) AS `total_qtr_hrs`,sec_to_time((sum(`a`.`mins`) * 60)) AS `total_time`,min(`a`.`projectStart`) AS `start`,max(`a`.`projectFinish`) AS `finished`,(to_days(max(`a`.`projectFinish`)) - to_days(min(`a`.`projectStart`))) AS `days` from `eyefidb`.`fs_labor_view` `a` where (`a`.`isEvent` = 1) group by `a`.`workOrderId`;

DROP TABLE IF EXISTS `fs_work_order_summary_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda2022`@`%` SQL SECURITY DEFINER VIEW `fs_work_order_summary_view` AS select `a`.`workOrderId` AS `workOrderId`,sum((case when (`a`.`event_type` = 1) then `a`.`mins` else 0 end)) AS `service_mins`,sum((case when (`a`.`event_type` = 2) then `a`.`mins` else 0 end)) AS `travel_mins`,sum((case when (`a`.`event_type` = 2) then `a`.`qtr_hrs` else 0 end)) AS `travel_mins_qtr_hrs`,sum((case when (`a`.`event_type` = 3) then `a`.`mins` else 0 end)) AS `non_service_mins`,sum(`a`.`mins`) AS `total_mins`,sum(`a`.`qtr_hrs`) AS `total_qtr_hrs`,min(`a`.`projectStart`) AS `start`,max(`a`.`projectFinish`) AS `finished`,`d`.`team` AS `team`,`d`.`total_techs` AS `total_techs`,`c`.`request_date` AS `request_date`,`b`.`dateSubmitted` AS `dateSubmitted`,`b`.`createdDate` AS `createdDate`,`c`.`service_type` AS `service_type`,`c`.`out_of_state` AS `out_of_state`,`c`.`sign_theme` AS `sign_theme`,`c`.`platform` AS `platform`,(case when isnull(`b`.`dateSubmitted`) then 'In Process' else `b`.`workCompleted` end) AS `workCompleted` from (((`eyefidb`.`fs_labor_view` `a` join `eyefidb`.`fs_workOrder` `b` on((`b`.`id` = `a`.`workOrderId`))) join `eyefidb`.`fs_scheduler` `c` on((`c`.`id` = `b`.`fs_scheduler_id`))) left join (select `eyefidb`.`fs_team`.`fs_det_id` AS `fs_det_id`,group_concat(`eyefidb`.`fs_team`.`user` separator ', ') AS `team`,count(`eyefidb`.`fs_team`.`fs_det_id`) AS `total_techs` from `eyefidb`.`fs_team` group by `eyefidb`.`fs_team`.`fs_det_id`) `d` on((`d`.`fs_det_id` = `c`.`id`))) where (`a`.`isEvent` = 1) group by `a`.`workOrderId`,`c`.`platform`,`d`.`team`,`d`.`total_techs`,`c`.`request_date`,`b`.`dateSubmitted`,`c`.`service_type`;

DROP TABLE IF EXISTS `graphicsTotalOrdersByQueue`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `graphicsTotalOrdersByQueue` AS select count(0) AS `totalOrders`,`userTrans`.`n` AS `n` from `userTrans` where ((`userTrans`.`field` in ('Cutting completed','Digital Print completed','Lam 1st Surface completed','Lam 2nd Surface completed','Mounting completed','QA completed','Review completed','Ship completed')) and (`userTrans`.`n` <> '')) group by `userTrans`.`n` order by `userTrans`.`n`;

DROP TABLE IF EXISTS `graphicsTotalPerDayUsers`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `graphicsTotalPerDayUsers` AS select `eyefidb`.`userTrans`.`userId` AS `userId`,concat(`b`.`first`,' ',`b`.`last`) AS `userName`,count(0) AS `hits`,cast(`eyefidb`.`userTrans`.`createDate` as date) AS `createDate` from (`eyefidb`.`userTrans` left join `db`.`users` `b` on((`eyefidb`.`userTrans`.`userId` = `b`.`id`))) where (`eyefidb`.`userTrans`.`field` in ('Cutting completed','Digital Print completed','Lam 1st Surface completed','Screen Printing completed','Lam 2nd Surface completed','Mounting completed','QA completed','Review completed','Ship completed')) group by `eyefidb`.`userTrans`.`userId`,cast(`eyefidb`.`userTrans`.`createDate` as date) order by cast(`eyefidb`.`userTrans`.`createDate` as date) desc;

DROP TABLE IF EXISTS `graphicsTotalPerHourUser`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `graphicsTotalPerHourUser` AS select `eyefidb`.`userTrans`.`userId` AS `userId`,concat(`b`.`first`,' ',`b`.`last`) AS `userName`,count(0) AS `hits`,hour(`eyefidb`.`userTrans`.`createDate`) AS `byHour`,cast(`eyefidb`.`userTrans`.`createDate` as date) AS `byDate` from (`eyefidb`.`userTrans` left join `db`.`users` `b` on((`eyefidb`.`userTrans`.`userId` = `b`.`id`))) where ((`eyefidb`.`userTrans`.`field` in ('Request submitted','Cutting completed','Digital Print completed','Lam 1st Surface completed','Lam 2nd Surface completed','Mounting completed','QA completed','Review completed','Ship completed')) and (`eyefidb`.`userTrans`.`userId` <> 3)) group by `eyefidb`.`userTrans`.`userId`,hour(`eyefidb`.`userTrans`.`createDate`),cast(`eyefidb`.`userTrans`.`createDate` as date) order by `eyefidb`.`userTrans`.`userId`,cast(`eyefidb`.`userTrans`.`createDate` as date),hour(`eyefidb`.`userTrans`.`createDate`) desc;

DROP TABLE IF EXISTS `graphicsTotalTransPerUser`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `graphicsTotalTransPerUser` AS select `eyefidb`.`userTrans`.`userId` AS `UserId`,concat(`b`.`first`,' ',`b`.`last`) AS `userName`,count(0) AS `hits` from (`eyefidb`.`userTrans` left join `db`.`users` `b` on((`eyefidb`.`userTrans`.`userId` = `b`.`id`))) group by `eyefidb`.`userTrans`.`userId` order by count(0) desc;

DROP TABLE IF EXISTS `job_and_event_view`;
CREATE ALGORITHM=UNDEFINED DEFINER=`rda`@`localhost` SQL SECURITY DEFINER VIEW `job_and_event_view` AS select `a`.`id` AS `id`,`a`.`group_id` AS `group_id`,NULL AS `event_id`,concat(`a`.`request_date`,' ',`a`.`start_time`) AS `start`,`a`.`request_date` AS `request_date`,`a`.`platform` AS `platform`,`a`.`customer` AS `customer`,`a`.`sign_type` AS `sign_type`,`a`.`out_of_state` AS `out_of_state`,`a`.`status` AS `status`,(case when (`a`.`published` = 0) then '#000' else `b`.`font_color` end) AS `textColor`,(case when (`a`.`published` = 0) then '#fff' else `b`.`bg_color` end) AS `backgroundColor`,(case when (`a`.`out_of_state` = 'Yes') then 'blue' else `b`.`bg_color` end) AS `borderColor`,`c`.`property` AS `property`,(case when isnull(`a`.`title`) then concat(ifnull(`a`.`customer`,''),' ',convert(ifnull(`c`.`property`,'') using utf8),', (',ifnull(`a`.`service_type`,''),')') else `a`.`title` end) AS `title`,'job' AS `type`,`e`.`team` AS `team`,NULL AS `NULL`,concat(ifnull(`c`.`property`,''),ifnull(`c`.`address1`,''),ifnull(`c`.`address2`,''),ifnull(`c`.`city`,''),ifnull(`c`.`state`,''),ifnull(`c`.`zip_code`,'')) AS `full_address` from (((`eyefidb`.`fs_scheduler` `a` left join `eyefidb`.`fs_status_category` `b` on((convert(`b`.`name` using utf8) = `a`.`status`))) left join `eyefidb`.`fs_property_det` `c` on((`c`.`id` = `a`.`property_id`))) left join (select `eyefidb`.`fs_team`.`fs_det_id` AS `fs_det_id`,group_concat(`eyefidb`.`fs_team`.`user` separator ', ') AS `team` from `eyefidb`.`fs_team` group by `eyefidb`.`fs_team`.`fs_det_id`) `e` on((`e`.`fs_det_id` = `a`.`id`))) where ((`a`.`schedule_later` = 0) and (`a`.`active` = 1)) union all select `a`.`id` AS `id`,NULL AS `group_id`,`a`.`id` AS `event_id`,concat(date_format(`a`.`start`,'%Y-%m-%d'),' ',date_format(`a`.`start`,'%H:%i')) AS `start`,date_format(`a`.`start`,'%Y-%m-%d') AS `request_date`,NULL AS `platform`,NULL AS `customer`,NULL AS `sign_type`,NULL AS `out_of_state`,NULL AS `status`,`a`.`textColor` AS `textColor`,`a`.`backgroundColor` AS `backgroundColor`,`a`.`backgroundColor` AS `borderColor`,NULL AS `property`,concat(`a`.`title`,' ',`a`.`type`) AS `title`,'event' AS `type`,NULL AS `team`,`a`.`allDay` AS `allDay`,NULL AS `full_address` from `eyefidb`.`companyHoliday` `a`;

DROP TABLE IF EXISTS `platform_avg`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `platform_avg` AS select `a`.`platform` AS `platform`,sum(`b`.`install_hrs`) AS `total_install_hrs`,truncate(avg(`b`.`install_hrs`),0) AS `avg_install_hrs`,sum(`b`.`non_install_hrs`) AS `total_non_install_hrs`,truncate(avg(`b`.`non_install_hrs`),0) AS `avg_non_install_hrs`,sum(`b`.`total_hrs`) AS `total_hrs`,sum(`b`.`travel_onJob_hrs`) AS `total_travel_onJob_hrs`,sum(`d`.`total_travel`) AS `total_travel_cost`,truncate(avg(`d`.`total_travel`),0) AS `avg_total_travel_cost`,sum(`e`.`trip_cost`) AS `total_trip_cost`,avg(`e`.`trip_cost`) AS `avg_trip_expenses`,max(`a`.`request_date`) AS `last_requested_date`,`a`.`service_type` AS `service_type`,count(`c`.`id`) AS `ticket_count`,group_concat(`b`.`work_orders` separator ',') AS `ticket_numbers` from ((((`eyefidb`.`fs_scheduler` `a` left join (select `eyefidb`.`fs_workOrder`.`fs_scheduler_id` AS `fs_scheduler_id`,`eyefidb`.`fs_workOrder`.`id` AS `id` from `eyefidb`.`fs_workOrder`) `c` on((`c`.`fs_scheduler_id` = `a`.`id`))) left join (select sum((case when (`eyefidb`.`fs_workOrderProject`.`proj_type` = 'Install') then `eyefidb`.`fs_workOrderProject`.`totalHours` else 0 end)) AS `install_hrs`,sum(`eyefidb`.`fs_workOrderProject`.`totalHours`) AS `total_hrs`,sum((case when (`eyefidb`.`fs_workOrderProject`.`proj_type` not in ('Install','Travel To Site','Travel From Site')) then `eyefidb`.`fs_workOrderProject`.`totalHours` else 0 end)) AS `non_install_hrs`,sum((case when (`eyefidb`.`fs_workOrderProject`.`proj_type` in ('Travel To Site','Travel From Site')) then `eyefidb`.`fs_workOrderProject`.`totalHours` else 0 end)) AS `travel_onJob_hrs`,`eyefidb`.`fs_workOrderProject`.`workOrderId` AS `workOrderId`,group_concat(distinct `eyefidb`.`fs_workOrderProject`.`workOrderId` separator ',') AS `work_orders` from `eyefidb`.`fs_workOrderProject` group by `eyefidb`.`fs_workOrderProject`.`workOrderId`) `b` on((`b`.`workOrderId` = `c`.`id`))) left join (select sum(`eyefidb`.`fs_workOrderDetail`.`totalHours`) AS `total_travel`,`eyefidb`.`fs_workOrderDetail`.`workOrderId` AS `workOrderId` from `eyefidb`.`fs_workOrderDetail` group by `eyefidb`.`fs_workOrderDetail`.`workOrderId`) `d` on((`d`.`workOrderId` = `c`.`id`))) left join (select sum(`eyefidb`.`fs_workOrderTrip`.`cost`) AS `trip_cost`,`eyefidb`.`fs_workOrderTrip`.`workOrderId` AS `workOrderId` from `eyefidb`.`fs_workOrderTrip` group by `eyefidb`.`fs_workOrderTrip`.`workOrderId`) `e` on((`e`.`workOrderId` = `c`.`id`))) where ((`a`.`platform` <> '') and (`a`.`created_by` <> 3)) group by `a`.`platform`,`a`.`service_type` having (count(`c`.`id`) > 0);

DROP TABLE IF EXISTS `view_fs_team`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `view_fs_team` AS select `a`.`id` AS `id`,`a`.`fs_det_id` AS `fs_det_id`,`a`.`user` AS `user`,`a`.`user_rate` AS `user_rate`,`a`.`active` AS `active`,`a`.`lead_tech` AS `lead_tech`,`a`.`contractor_code` AS `contractor_code`,`a`.`user_rate_ot` AS `user_rate_ot`,`a`.`outside` AS `outside`,`a`.`user_id` AS `user_id`,`a`.`ticket_verified` AS `ticket_verified`,(case when (`b`.`title` = 'Vendor') then `b`.`first` else concat(`b`.`first`,' ',`b`.`last`) end) AS `username` from (`eyefidb`.`fs_team` `a` left join `db`.`users` `b` on((`b`.`id` = `a`.`user_id`)));

DROP TABLE IF EXISTS `vview_fs_team`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `vview_fs_team` AS select `a`.`id` AS `id`,`a`.`fs_det_id` AS `fs_det_id`,`a`.`user` AS `user`,`a`.`user_rate` AS `user_rate`,`a`.`active` AS `active`,`a`.`lead_tech` AS `lead_tech`,`a`.`contractor_code` AS `contractor_code`,`a`.`user_rate_ot` AS `user_rate_ot`,`a`.`outside` AS `outside`,`a`.`user_id` AS `user_id`,(case when (`b`.`title` = 'Vendor') then `b`.`first` else concat(`b`.`first`,' ',`b`.`last`) end) AS `username` from (`eyefidb`.`fs_team` `a` left join `db`.`users` `b` on((`b`.`id` = `a`.`user_id`)));

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
